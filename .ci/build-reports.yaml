generate-api-reference:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - bin/console r2d2:api:dump > openapi.json
  artifacts:
    expire_in: 1 day
    paths:
      - openapi.json

phpmetrics:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - vendor/bin/phpmetrics --report-html=report/html/phpmetrics src
  artifacts:
    expire_in: 1 day
    paths:
      - report/

mermaid-generate-images:
  stage: Build Reports
  needs:
    - composer
  image:
    name: minlag/mermaid.cli:latest
    entrypoint: [""]
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  script:
    - mkdir -p report/html/docs/architecture/diagram/
    - 'for flow in docs/architecture/diagram/*.mmd; do mmdc -p mmdc-config.json -i ${flow%%.*}.mmd -o ${flow%%.*}.png --width 8000 --height 6000; done; mv docs/architecture/diagram/*.png report/html/docs/architecture/diagram/;'
  only:
    - master
  except:
    - schedules

code-tests-aggregate:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - unitTests
    - infection
  script:
    - echo true
  artifacts:
    expire_in: 1 day
    paths:
      - report/
      - openapi.json

generate-extra-docs:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - >
      vendor/bin/phpadr workspace:list --config=phpadr.yaml | sed 1,3d | head -n -2 | awk '{$1=""$1""": adr/"$1"";print}' | sed -e 's/^/      - /' >> mkdocs.yml
    - bin/console r2d2:exception:dump >> docs/exceptions.md
    - cp README.md docs/
  artifacts:
    expire_in: 1 day
    paths:
      - mkdocs.yml
      - docs/exceptions.md
      - docs/README.md
