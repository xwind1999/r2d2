variables:
  LOCUST_REPORT_IMAGE: docker-registry.production.smartbox.com/millenium-falcon/locustreport
  BLUE_PILL_IMAGE: docker-registry.production.smartbox.com/shared-tools/blue-pill:latest

generate-api-reference:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - bin/console r2d2:api:dump > openapi.json
  artifacts:
    expire_in: 1 day
    paths:
      - openapi.json
  except:
    - tags

phpmetrics:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - vendor/bin/phpmetrics --report-html=report/html/phpmetrics src
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  except:
    - tags

mermaid-generate-images:
  stage: Build Reports
  needs:
    - composer
  image:
    name: minlag/mermaid.cli:latest
    entrypoint: [""]
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  script:
    - mkdir -p report/html/docs/architecture/diagram/
    - 'for flow in docs/architecture/diagram/*.mmd; do mmdc -p mmdc-config.json -i ${flow%%.*}.mmd -o ${flow%%.*}.png --width 8000 --height 6000; done; mv docs/architecture/diagram/*.png report/html/docs/architecture/diagram/;'
  only:
    - master
  except:
    - schedules
    - tags

code-tests-aggregate:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - unit-tests
    - api-tests
    - infection
  script:
    - echo true
  artifacts:
    expire_in: 1 day
    paths:
      - report/
      - openapi.json
  except:
    - tags

schemaspy:
  stage: Build Reports
  image: ${VALIDATION_IMAGE}
  needs:
    - composer
  services:
    - name: mysql:8.0
      alias: mysql
  variables:
    MYSQL_DATABASE: r2d2
    MYSQL_ROOT_PASSWORD: admin123
    MYSQL_USER: root
    DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}?serverVersion=8.0"
    AVAILABILITY_READ_DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}?serverVersion=8.0"
  script:
    - until bin/console doctrine:database:create -e test --if-not-exists --no-interaction; do sleep 1; done
    - bin/console doctrine:schema:update --force
    - java -jar /schemaspy.jar -dp /mysql/mysql-connector-java-8.0.20.jar -t mysql -o report/html/db -u root -p admin123 -host mysql -db r2d2 -s r2d2 -vizjs -degree 2 -imageformat png
  artifacts:
    expire_in: 1 day
    paths:
      - report/html/db
  except:
    - tags

generate-extra-docs:
  stage: Build Reports
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - >
      vendor/bin/phpadr workspace:list --config=phpadr.yaml | sed 1,3d | head -n -2 | awk '{$1=""$1""": adr/"$1"";print}' | sed -e 's/^/      - /' >> mkdocs.yml
    - bin/console r2d2:exception:dump >> docs/exceptions.md
    - cp README.md docs/
  artifacts:
    expire_in: 1 day
    paths:
      - mkdocs.yml
      - docs/exceptions.md
      - docs/README.md
  except:
    - tags

locust-report:
  stage: Build Reports
  needs:
    - locust-DEV-INT
  image: ${LOCUST_REPORT_IMAGE}
  script:
    - python ${CI_PROJECT_DIR}/tests/LoadTests/reportFile/graph.py
  only:
    - master
  artifacts:
    expire_in: 3 days
    paths:
      - report/html/locust/result.html

.blue-pill-template: &blue-pill
  stage: Publish Reports
  image: ${BLUE_PILL_IMAGE}
  before_script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - cd /app
  only:
    - master

blue-pill-DEV-INT:
  <<: *blue-pill
  needs:
    - locust-DEV-INT
  script:
    - bin/console blue-pill:locust:push-report --app=r2-d2 --environment=devint --code=${CI_COMMIT_SHORT_SHA} --date=${COMMIT_TIME} ${CI_PROJECT_DIR}/report/html/locust/staging_end2EndTests.py_stats.csv

blue-pill-PREPROD:
  <<: *blue-pill
  needs:
    - locust-PREPROD
  script:
    - bin/console blue-pill:locust:push-report --app=r2-d2 --environment=preprod --code=${CI_COMMIT_SHORT_SHA} --date=${COMMIT_TIME} ${CI_PROJECT_DIR}/report/html/locust/preprod_end2EndTests.py_stats.csv

blue-pill-PROD:
  <<: *blue-pill
  needs:
    - locust-PROD
  script:
    - bin/console blue-pill:locust:push-report --app=r2-d2 --environment=prod --code=${CI_COMMIT_SHORT_SHA} --date=${COMMIT_TIME} ${CI_PROJECT_DIR}/report/html/locust/prod_end2EndTests.py_stats.csv
