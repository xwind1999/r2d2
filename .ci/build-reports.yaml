generate-api-reference:
  stage: Build Reports
  image: ${BASE_FULL_IMAGE}
  needs:
    - composer
  script:
    - bin/console r2d2:api:dump > openapi.json
  artifacts:
    expire_in: 1 day
    paths:
      - openapi.json
  tags:
    - k8s-alpha

phpmetrics:
  stage: Build Reports
  image: ${BASE_FULL_IMAGE}
  needs:
    - composer
  script:
    - vendor/bin/phpmetrics --report-html=report/html/phpmetrics src
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  tags:
    - k8s-alpha

mermaid-generate-images:
  stage: Build Reports
  image:
    name: jnewland/mermaid.cli
    entrypoint: [""]
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  script:
    - mkdir -p report/html/docs/architecture/diagram/
    - 'cd docs; for flow in architecture/diagram/*.mmd; do node /data/index.bundle.js -i ${flow%%.*}.mmd -o ${flow%%.*}.png; done; cd ..; mv docs/architecture/diagram/*.png report/html/docs/architecture/diagram/;'
    - ls -lah report/html/docs/architecture/diagram/
  only:
    refs:
      - master
      - tags
  tags:
    - k8s-alpha
  except:
    - schedules

code-tests-aggregate:
  stage: Build Reports
  image: ${BASE_FULL_IMAGE}
  needs:
    - unitTests
    - infection
  script:
    - echo true
  artifacts:
    expire_in: 1 day
    paths:
      - report/
      - openapi.json
  tags:
    - k8s-alpha

