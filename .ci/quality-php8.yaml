stages:
  - Base image
  - Dependencies
  - Test
  - Static Analysis

default:
  image: ${BASE_IMAGE_PHP8}
  tags:
    - k8s

build-base-image-php8.0:
  stage: Base image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor --context .ci/docker/base8.0 --cache --destination ${BASE_IMAGE_PHP8}

build-validation-image-php8.0:
  stage: Dependencies
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - /kaniko/executor --context .ci/docker/validation --cache --destination ${VALIDATION_IMAGE_PHP8}

composer:
  stage: Dependencies
  cache:
    key:
      files:
        - composer.lock
        - symfony.lock
    paths:
      - cache/composer
  script:
    - sh .ci/docker/base8.0/update-php-version.sh
    - .ci/docker/base8.0/load-key.sh "${SSH_KNOWN_HOSTS}" "${SSH_KEY}"
    - COMPOSER_MEMORY_LIMIT=-1 composer config cache-dir cache/composer
    - COMPOSER_MEMORY_LIMIT=-1 composer install -n --no-progress --ignore-platform-reqs
    - composer check-platform-reqs || true
  artifacts:
    expire_in: 1 day
    paths:
      - vendor/
      - public/bundles
      - public/version.txt

unit-tests:
  stage: Test
  script:
    - phpdbg -qrr vendor/bin/phpunit --testsuite=UnitTests --colors=never
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  only:
    - branches
  except:
    - tags

php-cs-fixer:
  stage: Test
  needs:
    - composer
  variables:
    PHP_CS_FIXER_IGNORE_ENV: 1
  script:
    - vendor/bin/php-cs-fixer fix -v --dry-run
  except:
    - tags

.api-tests-template: &apiTests
  stage: Test
  image: ${VALIDATION_IMAGE_PHP8}
  needs:
    - composer
  services:
    - name: percona:8.0
      alias: mysql
      command:
        - mysqld
        - --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
  variables:
    MYSQL_DATABASE: r2d2
    MYSQL_ROOT_PASSWORD: admin123
    MYSQL_USER: root
    DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}?serverVersion=8.0"
    AVAILABILITY_READ_DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}?serverVersion=8.0"
  before_script:
    - until bin/console doctrine:database:create -e test --if-not-exists --no-interaction; do sleep 1; done
    - bin/console doctrine:schema:update --force
    - bin/console doctrine:database:import utils/fixtures/dumps/*
    - php -dmemory_limit=-1 bin/console doctrine:fixtures:load --append
    - bin/console -e test messenger:setup-transports
  artifacts:
    expire_in: 1 day
    paths:
      - report/html/api-tests/
      - report/html/db
      - report/raw/api-tests/
      - var/log/test.log
  only:
    - branches
  except:
    - tags

api-tests:
  <<: *apiTests
  script:
    - phpdbg -qrr vendor/bin/phpunit --testsuite=ApiTests --colors=never --coverage-html report/html/api-tests/ --log-junit report/raw/api-tests/junit.xml --testdox

DB-validation-tests:
  <<: *apiTests
  script:
    - phpdbg -qrr vendor/bin/phpunit --testsuite=IntegrationTests --colors=never --coverage-html report/html/api-tests/ --log-junit report/raw/api-tests/junit.xml --testdox

phpstan:
  stage: Static Analysis
  needs:
    - composer
  script:
    - php -d memory_limit=-1 vendor/bin/phpstan analyse $(pwd)/src --level 8
  except:
    - tags

psalm:
  stage: Static Analysis
  needs:
    - composer
  script:
    - vendor/bin/psalm
  except:
    - tags

infection:
  stage: Static Analysis
  dependencies:
    - composer
    - unit-tests
  needs:
    - composer
    - unit-tests
  script:
    - vendor/bin/infection --min-covered-msi=78.60 --only-covered --threads=6 --coverage=report/raw/phpunit/coverage --test-framework-options="--testsuite=UnitTests "
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  except:
    - tags
