variables:
  PACT_BROKER: http://pactbroker.production.smartbox.com:30336/
  BASE_IMAGE_STUB: docker-registry.production.smartbox.com/millenium-falcon/r2d2mock
  LOCUST_IMAGE: locustio/locust:1.0.2

unit-tests:
  stage: Test
  image: ${BASE_IMAGE}
  needs:
    - composer
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  script:
    - phpdbg -qrr vendor/bin/phpunit --testsuite=UnitTests --colors=never
  artifacts:
    expire_in: 1 day
    paths:
      - report/
  except:
    - tags

api-tests:
  stage: Test
  image: ${VALIDATION_IMAGE}
  needs:
    - composer
  services:
    - name: mysql:8.0
      alias: mysql
  variables:
    MYSQL_DATABASE: r2d2
    MYSQL_ROOT_PASSWORD: admin123
    MYSQL_USER: root
    DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}?serverVersion=8.0"
  before_script:
    - until bin/console doctrine:database:create -e test --if-not-exists --no-interaction; do sleep 1; done
    - bin/console doctrine:schema:update --force
    - bin/console doctrine:database:import utils/fixtures/dumps/*
    - php -dmemory_limit=-1 bin/console doctrine:fixtures:load --append
    - bin/console -e test messenger:setup-transports
  script:
    - phpdbg -qrr vendor/bin/phpunit --testsuite=ApiTests --colors=never --coverage-html report/html/api-tests/ --log-junit report/raw/api-tests/junit.xml --testdox
  artifacts:
    expire_in: 1 day
    paths:
      - report/html/api-tests/
      - report/html/db
      - report/raw/api-tests/
  only:
    - branches
  except:
    - tags

api-tests-DEV-INT:
  stage: Deploy Validation
  image: ${BASE_IMAGE}
  needs:
    - deploy-DEV-INT
    - composer
  dependencies:
    - composer
  variables:
    API_TEST_BASE_URL: "http://ie1-devint-r2d2-api-01.z.sbxtest.net"
  script:
    - php vendor/bin/phpunit --testsuite=ApiTests --testdox --no-coverage
  only:
    - master
  except:
    - tags

.locust-template: &locust
  image: ${LOCUST_IMAGE}
  inherit:
    default: false
  when: always
  dependencies: []
  before_script:
    - mkdir -p /builds/millenniumfalcon/r2-d2-api/report/html/locust/
  script:
    - echo "Running Locust tests...."
    - echo ${CI_PROJECT_DIR}
    - locust -f ${CI_PROJECT_DIR}/tests/LoadTests/${LOCUST_FILE}  --host=${LOCUST_HOST} ${LOCUST_OPTS} --csv=report/html/locust/${LOCUST_ENV}_${LOCUST_FILE} --only-summary
  artifacts:
    expire_in: 3 days
    paths:
      - report/
  tags:
    - k8s
  except:
    - schedules

locust-PREPROD:
  <<: *locust
  stage: Preprod Validation
  allow_failure: true
  needs: ['deploy-PREPROD']
  when: on_success
  only:
    - tags
  variables:
    LOCUST_ENV: "preprod"
    LOCUST_HOST: "https://r2-d2-api-preprod.sbxtest.net"
    LOCUST_OPTS: "--headless -u 50 -r 5 --run-time 1m"
    LOCUST_FILE: "end2EndTests.py"

locust-DEV-INT:
  <<: *locust
  stage: Deploy Validation
  allow_failure: true
  only:
    - master
  variables:
    LOCUST_ENV: "staging"
    LOCUST_HOST: "http://r2-d2-api-devint.sbxtest.net"
    LOCUST_OPTS: "--headless -u 50 -r 5 --run-time 1m"
    LOCUST_FILE: "end2EndTests.py"

.health-smoke-test:
  allow_failure: true
  image: ${BASE_IMAGE}
  script:
    - curl -f ${CHECK_ENVIRONMENT}
  only:
    - tags

'pre-health-smoke-test-DEV-INT':
  extends: .health-smoke-test
  stage: Deploy Setup
  variables:
    CHECK_ENVIRONMENT: http://r2-d2-api-devint.sbxtest.net/_monitor/health/run
  only:
    - master

'post-health-smoke-test-DEV-INT':
  extends: .health-smoke-test
  stage: Deploy Validation
  allow_failure: false
  variables:
    CHECK_ENVIRONMENT: http://r2-d2-api-devint.sbxtest.net/_monitor/health/run
  only:
    - master

'pre-health-smoke-test-PREPROD':
  extends: .health-smoke-test
  stage: Preprod Check
  variables:
    CHECK_ENVIRONMENT: https://r2-d2-api-preprod.sbxtest.net/_monitor/health/run

'post-health-smoke-test-PREPROD':
  extends: .health-smoke-test
  stage: Preprod Validation
  allow_failure: false
  needs: ['deploy-PREPROD']
  when: on_success
  variables:
    CHECK_ENVIRONMENT: https://r2-d2-api-preprod.sbxtest.net/_monitor/health/run

'pre-health-smoke-test-PROD':
  extends: .health-smoke-test
  stage: Production Check
  needs: ['post-health-smoke-test-PREPROD', 'locust-PREPROD']
  when: on_success
  variables:
    CHECK_ENVIRONMENT: https://r2-d2-api.production.smartbox.com/_monitor/health/run

'post-health-smoke-test-PROD':
  extends: .health-smoke-test
  stage: Production Validation
  allow_failure: false
  needs: ['deploy-PROD']
  when: on_success
  variables:
    CHECK_ENVIRONMENT: https://r2-d2-api.production.smartbox.com/_monitor/health/run

.running-r2d2:
  variables:
    DATABASE_URL: "sqlite:////tmp/db.sqlite"
  dependencies:
    - composer
  services:
    - name: ${BASE_IMAGE}
      alias: r2-d2.localhost
      command: ["bash", "-c", 'rm -rf /app; ln -s /builds/millenniumfalcon/r2-d2-api /app; php /builds/millenniumfalcon/r2-d2-api/bin/console doctrine:schema:update --force; chmod 777 /tmp/db.sqlite; /start.sh']
  before_script:
    - sleep 5
  tags:
    - docker

contract-tests-against-stub:
  stage: Test
  image: docker-registry.production.smartbox.com/pact-verifier-curl:latest
  services:
    - name: docker-registry.production.smartbox.com/millenniumfalcon/r2d2-stub
      alias: r2d2-api-stub
  script:
    - cd /app
    - pact-provider-verifier --provider-base-url=http://r2d2-api-stub:8080 --pact-broker-base-url=$PACT_BROKER --provider=R2D2
  tags:
    - docker
  allow_failure: true
  except:
    - tags

contract-tests-against-api:
  stage: Test
  extends: .running-r2d2
  image: docker-registry.production.smartbox.com/pact-verifier-curl:latest
  script:
    - cd /app
    - if [ -z $CI_COMMIT_TAG ] ; then PUBLISH='' ; else PUBLISH="-r --provider-app-version=${CI_COMMIT_TAG%RC*}" ; echo 'Verification is going to be published to Pact Broker' ; fi
    - pact-provider-verifier --provider-base-url=http://r2-d2-api --pact-broker-base-url=$PACT_BROKER --provider=R2D2 $PUBLISH
  allow_failure: true
  except:
    - tags

validate-api-spec-schema:
  stage: Test
  image:
    name: docker-registry.production.smartbox.com/millenniumfalcon/bb-8-api-swagger-cli
    entrypoint: [""]
  script:
    - swagger-cli validate reference/r2d2-api/openapi.yaml
  except:
    - tags

build-R2D2-stub-image:
  stage: Build
  image: docker:dind
  only:
    changes:
       - stub/sandbox/main.js
  script:
    - docker build -t ${BASE_IMAGE_STUB}:latest stub/
    - docker push ${BASE_IMAGE_STUB}:latest
  except:
    - tags

php-cs-fixer:
  stage: Test
  image: ${BASE_IMAGE}
  needs:
    - composer
  script:
    - vendor/bin/php-cs-fixer fix -v --dry-run
  except:
    - tags
