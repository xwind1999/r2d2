stages:
  - Build Base Image
  - Build Validation Image
  - Dependencies
  - Build
  - Test
  - Static Analysis
  - Deploy Setup
  - Project Env Deploy
  - Deploy Validation
  - Preprod Check
  - Preprod Deploy
  - Preprod Validation
  - Production Check
  - Production Deploy
  - Production Validation
  - Build Reports
  - Generate Documentation
  - Publish Reports

variables:
  MAIN_BRANCH: master
  CI_BRANCH: CI-master
  BASE_IMAGE: docker-registry.production.smartbox.com/millenium-falcon/r2d2-base:latest
  BASE_IMAGE_PHP8: docker-registry.production.smartbox.com/millenium-falcon/r2d2-base8.0:latest
  VALIDATION_IMAGE: docker-registry.production.smartbox.com/millenium-falcon/r2d2-validation:latest
  VALIDATION_IMAGE_PHP8: docker-registry.production.smartbox.com/millenium-falcon/r2d2-validation8.0:latest
  APP_IMAGE: docker-registry.production.smartbox.com/millenium-falcon/r2d2-api:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}

default:
  image: ${BASE_IMAGE}
  tags:
    - k8s

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
      when: always
    - when: never

include:
  - local: '/.ci/build-app-container.yaml'
  - local: '/.ci/deploy.yaml'
  - local: '/.ci/quality.yaml'
  - local: '/.ci/static-analysis.yaml'
  - local: '/.ci/build-reports.yaml'
  - local: '/.ci/edith.yaml'

composer:
  stage: Dependencies
  cache:
    key:
      files:
        - composer.lock
        - symfony.lock
    paths:
      - cache/composer
  script:
    - /load-key.sh "${SSH_KNOWN_HOSTS}" "${SSH_KEY}"
    - composer config cache-dir cache/composer
    - composer install -n --no-progress
  artifacts:
    expire_in: 1 day
    paths:
      - vendor/
      - public/bundles

composer-for-build:
  stage: Dependencies
  variables:
    APP_ENV: prod
  cache:
    key:
      files:
        - composer.lock
        - symfony.lock
    paths:
      - cache/composer
  script:
    - echo ${CI_COMMIT_SHA} > public/version.txt
    - /load-key.sh "${SSH_KNOWN_HOSTS}" "${SSH_KEY}"
    - composer config cache-dir cache/composer
    - composer install -n --no-progress --no-dev  --classmap-authoritative
  artifacts:
    expire_in: 1 day
    paths:
      - vendor/
      - public/bundles
      - public/version.txt
  rules:
    - if: '$CI_COMMIT_BRANCH == $MAIN_BRANCH'
    - when: never

build-docs:
  stage: Generate Documentation
  image: squidfunk/mkdocs-material
  needs:
    - generate-extra-docs
  script:
    - mkdocs build -d mkdocs/
  artifacts:
    paths:
      - mkdocs
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_BRANCH == $MAIN_BRANCH'
    - when: never

pages:
  stage: Publish Reports
  dependencies:
    - code-tests-aggregate
    - generate-api-reference
    - generate-extra-docs
    - mermaid-generate-images
    - phpmetrics
    - build-docs
    - schemaspy
    - locust-report
  needs:
    - build-docs
    - code-tests-aggregate
    - generate-api-reference
    - generate-extra-docs
    - mermaid-generate-images
    - phpmetrics
    - schemaspy
    - locust-report
  script:
    - rm -rf public/
    - mv mkdocs public/
    - mv report/ public/
    - mv reference public/
    - cp openapi.json public/
  artifacts:
    paths:
      - public
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_BRANCH == $MAIN_BRANCH'
    - when: never

build-php8-validation:
  stage: Dependencies
  trigger:
    include: .ci/quality-php8.yaml
