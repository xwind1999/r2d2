<?php

declare(strict_types=1);

namespace App\Tests\Command\Import;

use App\Command\Import\BookingImportCommand;
use App\Contract\Request\Booking\BookingImport\BookingImportRequest;
use Prophecy\Argument;
use Prophecy\Prophecy\ObjectProphecy;
use Symfony\Component\Console\Tester\CommandTester;

/**
 * @coversDefaultClass \App\Command\Import\BookingImportCommand
 */
class BookingImportCommandTest extends AbstractImportCommandTest
{
    protected ObjectProphecy $partnerRequest;
    protected ObjectProphecy $requestClass;

    protected function setUp(): void
    {
        $this->requestClass = $this->prophesize(BookingImportRequest::class);
        parent::setUp();

        $this->command = new BookingImportCommand(
            $this->logger->reveal(),
            $this->messageBus->reveal(),
            $this->helper->reveal(),
            $this->validator->reveal(),
            $this->serializer->reveal(),
            $this->moneyHelper->reveal()
        );

        $this->commandTester = new CommandTester($this->command);
        $this->application->add($this->command);
    }

    /**
     * @covers ::__construct
     * @covers ::configure
     * @covers ::execute
     * @covers ::process
     * @covers \App\Contract\Request\Booking\BookingImport\BookingImportRequest
     * @covers \App\Contract\Request\Booking\BookingImport\Guest
     * @dataProvider requestProvider
     */
    public function testExecuteWithInvalidData(\Iterator $bookingImportRequest): void
    {
        $this->executeWithInvalidData($bookingImportRequest);

        $this->assertEquals('r2d2:booking:import', $this->command::getDefaultName());
    }

    /**
     * @covers ::__construct
     * @covers ::configure
     * @covers ::execute
     * @covers ::process
     * @covers \App\Contract\Request\Booking\BookingImport\BookingImportRequest
     * @covers \App\Contract\Request\Booking\BookingImport\Guest
     * @dataProvider requestProvider
     */
    public function testExecuteWithValidData(\Iterator $bookingImportRequest): void
    {
        $this->executeWithValidData($bookingImportRequest);

        $this->assertEquals('r2d2:booking:import', $this->command::getDefaultName());
        $this->messageBus
            ->dispatch(Argument::type(BookingImportRequest::class))
            ->shouldBeCalledTimes(count($bookingImportRequest));
    }

    public function requestProvider(): ?\Generator
    {
        $records = new \ArrayIterator([
            [
                'goldenId' => '54302',
                'boxId' => '54302',
                'experienceId' => '54302',
                'experiencePrice' => '54302',
                'voucher' => '555444333',
                'currency' => 'EUR',
                'arrivalDate' => '2020-02-02 12:00:00',
                'endDate' => '2020-02-05 12:00:00',
                'additionalComment' => 'i would like a sea view, please',
                'customerData' => '0x1F8B08000000000004006D904B6BC2401485CF4F916EAB41939AAA2B0BDD74E1AEBB223298A88198943CA0A5F8DFFB6572190A95615EF77EF79C99FBA3077DAA51AE930A7D71DB30774422F6297388376AD5A992D31572645E54726E198E4C06E3ACA2E4F49F7FE534F1B99E6C6D6C0EE170288D72A6DAB1969E5EEB89F9ACADCE818D7444E16A1A239BF38F0BD12A383E2AA132F16BAA582B94629452AB1B347AF88EB77F5BCD9BDEEF660FFE9E05EDBF5CEFDF5BFBBF369005DC482DB4C46F8EE31AF7B95538F299EFF9D0BD81FCD03E74AEE29F3DFB397815A8CFCCF1A65F02A11B60B2010000',
                'components' => '0x
                'roomPrice' => '',
                'roomType' => '',
                'beginRoomDate' => '',
                'endRoomDate' => '',
            ],
            [
                'goldenId' => '879784',
                'boxId' => '879784',
                'experienceId' => '879784',
                'experiencePrice' => '879784',
                'voucher' => '777788222',
                'currency' => 'EUR',
                'arrivalDate' => '2020-04-02 12:00:00',
                'endDate' => '2020-04-05 12:00:00',
                'additionalComment' => 'i would like a sea view, please',
                'customerData' => '0x1F8B08000000000004006D904B6BC2401485CF4F916EAB41939AAA2B0BDD74E1AEBB223298A88198943CA0A5F8DFFB6572190A95615EF77EF79C99FBA3077DAA51AE930A7D71DB30774422F6297388376AD5A992D31572645E54726E198E4C06E3ACA2E4F49F7FE534F1B99E6C6D6C0EE170288D72A6DAB1969E5EEB89F9ACADCE818D7444E16A1A239BF38F0BD12A383E2AA132F16BAA582B94629452AB1B347AF88EB77F5BCD9BDEEF660FFE9E05EDBF5CEFDF5BFBBF369005DC482DB4C46F8EE31AF7B95538F299EFF9D0BD81FCD03E74AEE29F3DFB397815A8CFCCF1A65F02A11B60B2010000',
                'components' => '0x
                'roomPrice' => '20.83',
                'roomType' => 'extra_night',
                'beginRoomDate' => '2020-04-04 12:00:00',
                'endRoomDate' => '2020-04-05 12:00:00',
            ],
            [
                'goldenId' => 'RESA-0012328931',
                'boxId' => '848354',
                'experienceId' => '500925',
                'experiencePrice' => '1600',
                'currency' => 'EUR',
                'voucher' => '644342044',
                'arrivalDate' => '2020-09-02 12:00:00',
                'endDate' => '2020-09-04 12:00:00',
                'additionalComment' => 'Nous serons accompagnchien ne couchant pas sur le lit.',
                'customerData' => '0x1F8B0800000000000400DD524D4FC3300C7D3FA5EA19A68D41299C006970010901379850A1DDA854D22A4D1168DA7FE7D9490B63979D51E424B69F3FF29C156234B028B040894F6AA7941B64C829EFB4C7D8A388D7A2858319EC82BCE2CD503EE87F4287315781947A8128C4568CD88EBCC68CD133DC0554415FC62C55F057B42C2916237628A7458D57BC713738A3AFC78F68ADA9F93C8E58896D02B2AF374682634C718223DE53D57D844477443A56F80AE8CBA1AF4DEFB3EAF990F537AED357D6FA464B64499C47A538E44A5939C141C00BC3B932DF72096EF5EF66D12A6B0597C324E44AD88B554E9DF6952B03115E682BF566F46695951FA64AE24BADF7C0FD7C8BBD38A01B7AA5EEE69C26AC3B5546FA6949BE7EDAF7DABDCC38C285D630DA73845D7EC8EE3F2D23434EF913FEE53D329BDB3FF11E6B9573FFE2DEBE564FAE3FDCC74A3FDB5C3C623E4CDB304BC77339E45F10BB1FFA5FE31B65462D8202040000',                'components' => '0x
                'roomPrice' => '95.00',
                'roomType' => 'extra_room',
                'beginRoomDate' => '2020-09-02 00:00:00',
                'endRoomDate' => '2020-09-04 00:00:0',
            ],
            [
                'goldenId' => 'RESA-0011971749',
                'boxId' => '885212',
                'experienceId' => '948145',
                'experiencePrice' => '1349',
                'currency' => 'EUR',
                'voucher' => '502944097',
                'arrivalDate' => '2020-09-12 12:00:00',
                'endDate' => '2020-09-13 12:00:00',
                'additionalComment' => '',
                'customerData' => '0x1F8B080000000000040075905B0B82401085CF6FF1B942C8AE4F5DE8B15F1011A2EB05BC84BA9144FFBDB3E32A42850CEBECF9CEECCCBCE0E08E0A0A11523C996D1967942850F346415375306118A2E26D43CD474EADA7530448986796CCA87F734756CDC8169652D47CE699D5F3519D6060E7586103173BC4033F133DB7751A7128CE9148DFFD7B2E3C7A8D7FC9BF39D63C3B87716B920DE7692D7DC0E9A77A933C1CAA8E392D53963263453225D7510BBE6AC2B3AC4F25943DD7FC0C73C1559450BA4FF1901A2DF67F49B3D5825BD03CE3A19F88ECD476F5C607611A4FF8D0010000',
                'components' => '0x1F8B08000000000004005D8E510EC2300C43DF51AA7EB313213EDA75129B069BBA56DA918153E0A67CA14A69623B8EAF782A4F269C6A65A6A89BD43B46EE041E44B2F1894D8AC86AD32165902EA96655CF45687773ECD214731BC4BD5934F73BF94F197467E425BFD6574EFDB398EEBFEA0573DA0C6B29DAF528A4A51CF888EDF9764392A52A3F65F75B2C79D6BEE7C6173C12103AF4000000',
                'roomPrice' => null,
                'roomType' => null,
                'beginRoomDate' => null,
                'endRoomDate' => null,
            ],
            [
                'goldenId' => 'RESA-0000000000',
                'boxId' => '885212',
                'experienceId' => '948145',
                'experiencePrice' => '1349',
                'currency' => 'EUR',
                'voucher' => '502944097',
                'arrivalDate' => '2020-09-12 12:00:00',
                'endDate' => '2020-09-13 12:00:00',
                'additionalComment' => '',
                'customerData' => '0x1F8B080000000000040075905B0B82401085CF6FF1B942C8AE4F5DE8B15F1011A2EB05BC84BA9144FFBDB3E32A42850CEBECF9CEECCCBCE0E08E0A0A11523C996D1967942850F346415375306118A2E26D43CD474EADA7530448986796CCA87F734756CDC8169652D47CE699D5F3519D6060E7586103173BC4033F133DB7751A7128CE9148DFFD7B2E3C7A8D7FC9BF39D63C3B87716B920DE7692D7DC0E9A77A933C1CAA8E392D53963263453225D7510BBE6AC2B3AC4F25943DD7FC0C73C1559450BA4FF1901A2DF67F49B3D5825BD03CE3A19F88ECD476F5C607611A4FF8D0010000',
                'components' => '',
                'roomPrice' => null,
                'roomType' => null,
                'beginRoomDate' => null,
                'endRoomDate' => null,
            ],
        ]);

        yield [$records];
    }

    public function requestProviderInvalidData(): ?\Generator
    {
        $records = new \ArrayIterator([
            [
                'id' => '9999999999999999999999',
                'type' => 'partner',
                'partnerCeaseDate' => new \DateTime('now'),
                'isChannelManagerEnabled' => '',
                'updatedAt' => '2020-01-01 00:00:00',
            ],
            [
                'id' => '9999999999999999999999',
                'type' => 'partner',
                'partnerCeaseDate' => null,
                'isChannelManagerEnabled' => '',
                'updatedAt' => '2020-01-01 00:00:00',
            ],
            [
                'id' => '9999999999999999999999',
                'type' => 'partner',
                'partnerCeaseDate' => null,
                'isChannelManagerEnabled' => '',
                'updatedAt' => null,
            ],
        ]);

        yield [$records];
    }

    /**
     * @covers::configure
     */
    public function testConfigureOutput()
    {
        $definition = $this->command->getDefinition();

        $this->assertEquals('Command to push CSV booking to the queue', $this->command->getDescription());
        $this->assertArrayHasKey('file', $definition->getArguments());
        $this->assertEquals('CSV file path', $definition->getArgument('file')->getDescription());
    }
}
